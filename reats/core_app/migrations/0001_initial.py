# Generated by Django 4.1 on 2024-12-28 20:35

import django.core.validators
import django.db.models.deletion
import utils.enums
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AddressModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("street_name", models.CharField(max_length=100)),
                ("street_number", models.CharField(max_length=10)),
                ("town", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=5)),
                ("address_complement", models.CharField(max_length=512, null=True)),
                ("is_enabled", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "addresses",
            },
        ),
        migrations.CreateModel(
            name="CookerModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("firstname", models.CharField(max_length=100)),
                ("lastname", models.CharField(max_length=100)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(10)],
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        db_index=True,
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(regex="[0-9]{5}")
                        ],
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(regex="[0-9]{14}")
                        ],
                    ),
                ),
                ("street_name", models.CharField(max_length=100)),
                ("street_number", models.CharField(max_length=10)),
                ("town", models.CharField(max_length=100)),
                ("address_complement", models.CharField(max_length=512, null=True)),
                (
                    "photo",
                    models.CharField(
                        default="cookers/1/profile_pics/default-profile-pic.jpg",
                        max_length=512,
                    ),
                ),
                ("max_order_number", models.IntegerField(default=10)),
                ("is_online", models.BooleanField(default=False)),
                ("is_activated", models.BooleanField(default=False)),
                ("acceptance_rate", models.FloatField(default=100.0)),
                ("last_acceptance_rate_update_date", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "cookers",
            },
        ),
        migrations.CreateModel(
            name="CustomerModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("firstname", models.CharField(max_length=100)),
                ("lastname", models.CharField(max_length=100)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(10)],
                    ),
                ),
                (
                    "photo",
                    models.CharField(
                        default="customers/1/profile_pics/default-profile-pic.jpg",
                        max_length=512,
                    ),
                ),
                ("is_activated", models.BooleanField(default=False)),
                ("stripe_id", models.CharField(max_length=100, null=True)),
            ],
            options={
                "db_table": "customers",
            },
        ),
        migrations.CreateModel(
            name="DeliverModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("firstname", models.CharField(max_length=100)),
                ("lastname", models.CharField(max_length=100)),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(10)],
                    ),
                ),
                (
                    "photo",
                    models.CharField(
                        default="delivers/1/profile_pics/default-profile-pic.jpg",
                        max_length=512,
                    ),
                ),
                ("is_activated", models.BooleanField(default=False)),
                (
                    "delivery_vehicle",
                    models.CharField(
                        choices=[
                            ("bike", "bike"),
                            ("scooter", "scooter"),
                            ("car", "car"),
                        ],
                        default="bike",
                        max_length=7,
                    ),
                ),
                ("town", models.CharField(max_length=100)),
                ("delivery_radius", models.IntegerField()),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "siret",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(regex="[0-9]{14}")
                        ],
                    ),
                ),
                ("is_online", models.BooleanField(default=False)),
                ("grades", models.FloatField(default=0.0)),
            ],
            options={
                "db_table": "delivers",
            },
        ),
        migrations.CreateModel(
            name="DishModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("starter", "starter"),
                            ("dish", "dish"),
                            ("dessert", "dessert"),
                        ],
                        max_length=9,
                    ),
                ),
                ("country", models.CharField(max_length=50)),
                ("description", models.TextField(max_length=512, null=True)),
                ("name", models.CharField(max_length=128)),
                ("price", models.FloatField()),
                ("photo", models.CharField(max_length=512)),
                ("is_enabled", models.BooleanField(default=True)),
                ("is_suitable_for_quick_delivery", models.BooleanField(default=False)),
                (
                    "is_suitable_for_scheduled_delivery",
                    models.BooleanField(default=False),
                ),
                (
                    "cooker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core_app.cookermodel",
                    ),
                ),
            ],
            options={
                "db_table": "dishes",
            },
        ),
        migrations.CreateModel(
            name="DrinkModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "unit",
                    models.CharField(
                        choices=[("liter", "liter"), ("centiliters", "centiliters")],
                        max_length=20,
                    ),
                ),
                ("country", models.CharField(max_length=50)),
                ("description", models.TextField(max_length=512, null=True)),
                ("name", models.CharField(max_length=128)),
                ("price", models.FloatField()),
                ("photo", models.CharField(max_length=512)),
                ("is_enabled", models.BooleanField(default=True)),
                ("capacity", models.IntegerField()),
                ("is_suitable_for_quick_delivery", models.BooleanField(default=False)),
                (
                    "is_suitable_for_scheduled_delivery",
                    models.BooleanField(default=False),
                ),
                (
                    "cooker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core_app.cookermodel",
                    ),
                ),
            ],
            options={
                "db_table": "drinks",
            },
        ),
        migrations.CreateModel(
            name="OrderModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("scheduled_delivery_date", models.DateTimeField(null=True)),
                ("is_scheduled", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "draft"),
                            ("pending", "pending"),
                            ("processing", "processing"),
                            ("completed", "completed"),
                            ("cancelled_by_customer", "cancelled_by_customer"),
                            ("cancelled_by_cooker", "cancelled_by_cooker"),
                            ("delivered", "delivered"),
                        ],
                        default=utils.enums.OrderStatusEnum["DRAFT"],
                        max_length=30,
                    ),
                ),
                ("processing_date", models.DateTimeField(null=True)),
                ("completed_date", models.DateTimeField(null=True)),
                ("delivery_in_progress_date", models.DateTimeField(null=True)),
                ("cancelled_date", models.DateTimeField(null=True)),
                ("delivered_date", models.DateTimeField(null=True)),
                ("delivery_fees", models.FloatField(null=True)),
                ("delivery_fees_bonus", models.FloatField(null=True)),
                ("delivery_distance", models.FloatField(null=True)),
                ("delivery_initial_distance", models.FloatField(null=True)),
                ("paid_date", models.DateTimeField(null=True)),
                (
                    "stripe_payment_intent_id",
                    models.CharField(max_length=100, null=True),
                ),
                (
                    "stripe_payment_intent_secret",
                    models.CharField(max_length=100, null=True),
                ),
                (
                    "address",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core_app.addressmodel",
                    ),
                ),
                (
                    "cooker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core_app.cookermodel",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core_app.customermodel",
                    ),
                ),
                (
                    "delivery_man",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core_app.delivermodel",
                    ),
                ),
            ],
            options={
                "db_table": "orders",
            },
        ),
        migrations.CreateModel(
            name="OrderItemModel",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("dish_quantity", models.IntegerField(null=True)),
                ("drink_quantity", models.IntegerField(null=True)),
                (
                    "dish",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core_app.dishmodel",
                    ),
                ),
                (
                    "drink",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core_app.drinkmodel",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="core_app.ordermodel",
                    ),
                ),
            ],
            options={
                "db_table": "order_items",
            },
        ),
        migrations.AddField(
            model_name="addressmodel",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="addresses",
                to="core_app.customermodel",
            ),
        ),
    ]
